-- MySQL Script generated by MySQL Workbench
-- Wed Aug  9 07:26:11 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema solardb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `consumer_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `consumer_data` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `regkey` VARCHAR(100) NOT NULL,
  `datestamp` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `value` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `consumer_data_regkey_IDX` USING BTREE (`regkey`) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `device`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `device` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `port` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `port_UNIQUE` (`port` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COMMENT = 'device table';


-- -----------------------------------------------------
-- Table `field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `field` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `category` VARCHAR(10) NOT NULL DEFAULT 'simple',
  `format` VARCHAR(1) NOT NULL DEFAULT 'N',
  `registeraddr` VARCHAR(13) NOT NULL,
  `to_dashboard` TINYINT(4) NOT NULL DEFAULT 0 COMMENT 'if 1 then must be persisted to dashboard table',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `registeraddr_UNIQUE` (`registeraddr` ASC) VISIBLE,
  UNIQUE INDEX `label_UNIQUE` (`label` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `dashboard`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dashboard` (
  `id` INT(11) NOT NULL,
  `identifier` VARCHAR(24) NOT NULL,
  `field_id` INT(11) NULL DEFAULT NULL,
  `device_id` INT(11) NULL DEFAULT NULL,
  `value` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_dashboard_field1_idx` (`field_id` ASC) VISIBLE,
  INDEX `fk_dashboard_device1_idx` (`device_id` ASC) VISIBLE,
  CONSTRAINT `fk_dashboard_device1`
    FOREIGN KEY (`device_id`)
    REFERENCES `device` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dashboard_field1`
    FOREIGN KEY (`field_id`)
    REFERENCES `field` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `data` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `device_id` INT(11) NOT NULL,
  `field_id` INT(11) NOT NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `value` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_data_device_idx` (`device_id` ASC) VISIBLE,
  INDEX `fk_data_field1_idx` (`field_id` ASC) VISIBLE,
  INDEX `data_date_idx` USING BTREE (`date`) VISIBLE,
  CONSTRAINT `fk_data_device`
    FOREIGN KEY (`device_id`)
    REFERENCES `device` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_field1`
    FOREIGN KEY (`field_id`)
    REFERENCES `field` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `diary_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `diary_data` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `diary_id` INT(11) NOT NULL,
  `device_id` INT(11) NOT NULL,
  `field_id` INT(11) NOT NULL,
  `avgval` FLOAT NOT NULL DEFAULT 0,
  `minval` FLOAT NOT NULL DEFAULT 0,
  `maxval` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_diary_data_diary1_idx` (`diary_id` ASC) VISIBLE,
  INDEX `fk_diary_data_device1_idx` (`device_id` ASC) VISIBLE,
  INDEX `fk_diary_data_field1_idx` (`field_id` ASC) VISIBLE,
  CONSTRAINT `fk_diary_data_device1`
    FOREIGN KEY (`device_id`)
    REFERENCES `device` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_diary_data_diary1`
    FOREIGN KEY (`diary_id`)
    REFERENCES `diary` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_diary_data_field1`
    FOREIGN KEY (`field_id`)
    REFERENCES `field` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

-- solardb.dashboard_view source
CREATE OR REPLACE `dashboard_view` AS
select
    `d`.`identifier` AS `identifier`,
    case
        when `d`.`identifier` = 'load' then truncate(sum(`d`.`value`), 2)
        when `d`.`identifier` in ('batt_voltage', 'batt_soc') then truncate(avg(`d`.`value`), 2)
    end AS `value`
from
    `dashboard` `d`
where
    `d`.`value` > 0
group by
    `d`.`identifier`;

-- solardb.day_prod_by_device_view source
CREATE OR REPLACE `day_prod_by_device_view` AS (
select
    `d`.`datestamp` AS `datestamp`,
    `d`.`started_at` AS `started_at`,
    `d`.`ended_at` AS `ended_at`,
    `dv`.`name` AS `name`,
    time_to_sec(timediff(`d`.`ended_at`, `d`.`started_at`)) / 3600.0 * `dd`.`avgval` AS `wh`,
    `dd`.`avgval` AS `avgval`
from
    (((`diary` `d`
join `diary_data` `dd` on
    (`dd`.`diary_id` = `d`.`id`))
join `field` `f` on
    (`f`.`id` = `dd`.`field_id`))
join `device` `dv` on
    (`dv`.`id` = `dd`.`device_id`))
where
    `f`.`name` = 'rated_watt');


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
